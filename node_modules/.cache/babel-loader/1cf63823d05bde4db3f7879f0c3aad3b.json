{"ast":null,"code":"var _jsxFileName = \"/Users/jay/Projects/test/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    (async function () {\n      // We import this here so that it's only loaded during client-side rendering.\n      const pdfJS = await import('pdfjs-dist/build/pdf');\n      pdfJS.GlobalWorkerOptions.workerSrc = window.location.origin + '/pdf.worker.min.js';\n      const pdf = await pdfJS.getDocument('example.pdf').promise;\n      const page = await pdf.getPage(1);\n      const viewport = page.getViewport({\n        scale: 1.5\n      }); // Prepare canvas using PDF page dimensions.\n\n      const canvas = canvasRef.current;\n      const canvasContext = canvas.getContext('2d');\n      canvas.height = viewport.height;\n      canvas.width = viewport.width; // Render PDF page into canvas context.\n\n      const renderContext = {\n        canvasContext,\n        viewport\n      };\n      page.render(renderContext);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","App","canvasRef","pdfJS","GlobalWorkerOptions","workerSrc","window","location","origin","pdf","getDocument","promise","page","getPage","viewport","getViewport","scale","canvas","current","canvasContext","getContext","height","width","renderContext","render"],"sources":["/Users/jay/Projects/test/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\n\nexport default function App() {\n\tconst canvasRef = useRef(null);\n\n\tuseEffect(() => {\n\t\t(async function () {\n\t\t\t// We import this here so that it's only loaded during client-side rendering.\n\t\t\tconst pdfJS = await import('pdfjs-dist/build/pdf');\n\t\t\tpdfJS.GlobalWorkerOptions.workerSrc =\n\t\t\t\twindow.location.origin + '/pdf.worker.min.js';\n\t\t\tconst pdf = await pdfJS.getDocument('example.pdf').promise;\n\n\t\t\tconst page = await pdf.getPage(1);\n\t\t\tconst viewport = page.getViewport({ scale: 1.5 });\n\n\t\t\t// Prepare canvas using PDF page dimensions.\n\t\t\tconst canvas = canvasRef.current;\n\t\t\tconst canvasContext = canvas.getContext('2d');\n\t\t\tcanvas.height = viewport.height;\n\t\t\tcanvas.width = viewport.width;\n\n\t\t\t// Render PDF page into canvas context.\n\t\t\tconst renderContext = { canvasContext, viewport };\n\t\t\tpage.render(renderContext);\n\t\t})();\n\t}, []);\n\n\treturn <canvas ref={canvasRef} style={{ height: '100vh' }} />;\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;;AAEA,eAAe,SAASC,GAAT,GAAe;EAAA;;EAC7B,MAAMC,SAAS,GAAGF,MAAM,CAAC,IAAD,CAAxB;EAEAD,SAAS,CAAC,MAAM;IACf,CAAC,kBAAkB;MAClB;MACA,MAAMI,KAAK,GAAG,MAAM,OAAO,sBAAP,CAApB;MACAA,KAAK,CAACC,mBAAN,CAA0BC,SAA1B,GACCC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyB,oBAD1B;MAEA,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,WAAN,CAAkB,aAAlB,EAAiCC,OAAnD;MAEA,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,OAAJ,CAAY,CAAZ,CAAnB;MACA,MAAMC,QAAQ,GAAGF,IAAI,CAACG,WAAL,CAAiB;QAAEC,KAAK,EAAE;MAAT,CAAjB,CAAjB,CARkB,CAUlB;;MACA,MAAMC,MAAM,GAAGf,SAAS,CAACgB,OAAzB;MACA,MAAMC,aAAa,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAtB;MACAH,MAAM,CAACI,MAAP,GAAgBP,QAAQ,CAACO,MAAzB;MACAJ,MAAM,CAACK,KAAP,GAAeR,QAAQ,CAACQ,KAAxB,CAdkB,CAgBlB;;MACA,MAAMC,aAAa,GAAG;QAAEJ,aAAF;QAAiBL;MAAjB,CAAtB;MACAF,IAAI,CAACY,MAAL,CAAYD,aAAZ;IACA,CAnBD;EAoBA,CArBQ,EAqBN,EArBM,CAAT;EAuBA,oBAAO;IAAQ,GAAG,EAAErB,SAAb;IAAwB,KAAK,EAAE;MAAEmB,MAAM,EAAE;IAAV;EAA/B;IAAA;IAAA;IAAA;EAAA,QAAP;AACA;;GA3BuBpB,G;;KAAAA,G"},"metadata":{},"sourceType":"module"}